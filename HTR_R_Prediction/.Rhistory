}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt [-which(pool.dt%in%temp.pool)]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)])
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max && pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt [-which(pool.dt%in%temp.pool)]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max && pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt [-which(pool.dt%in%temp.pool)]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)])
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max && pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-setdiff(pool.dt%in%temp.pool)
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
str(predict.dt)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max && pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-setdiff(pool.dt%in%temp.pool)
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max && pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max && pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
container40
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max & pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
pool<-length(pool.dt)
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max & pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
pool<-length(pool.dt)
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max & pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool/2){pool<-0}
}
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
pool<-length(pool.dt)
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max & pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool){pool<-0}
}
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
pool<-length(pool.dt)
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60) & (pool.dt[i]+pool.dt[j])>local.max & pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool){pool<-0}
}
"%ni%" = Negate( "%in%" )
y_predicted<-ifelse(y_predicted<0,0,y_predicted)
predict.dt<-as.vector(append(y_predicted[-which(y_predicted<60)]-60,y_predicted[which(y_predicted<60)]))
pool.dt<-append(predict.dt,c(47.38,23.42,35,32.23,32.55))
pool<-length(pool.dt)
container40<-length(which(y_predicted>60))
container20<-0
stop<-0
while(pool>1){
##consolidate 40ft container
local.max<-0
temp.pool<-c()
pool<-length(pool.dt)
for(j in 1:pool){
pool<-length(pool.dt)
for(i in 1:pool){
pool<-length(pool.dt)
if(((pool.dt[i]+pool.dt[j])<=60)&((pool.dt[i]+pool.dt[j])>28) & (pool.dt[i]+pool.dt[j])>local.max & pool.dt[i]!=pool.dt[j]){
temp.pool<-c(pool.dt[i],pool.dt[j])
message(paste(temp.pool,collapse=","))
local.max<-pool.dt[i]+pool.dt[j]
message(local.max)
}
}
}
if(local.max>0){container40<-container40+1
pool<-pool-2
pool.dt<-pool.dt[ pool.dt %ni% temp.pool ]
}
else{
stop<-stop+1
}
message("pool:")
#pool.dt<-pool.dttemp.dt
message(pool.dt)
if(stop>pool){pool<-0}
}
container40
pool<-length(pool.dt)
container20<-length(which(pool.dt>28))
pool.dt
pool.dt<-append(pool.dt[-which(pool.dt<28)]-28,pool.dt[which(pool.dt<28)])
stop<-0
pool<-length(pool.dt)
shift(pool.dt,1:length(pool.dt))
shift(as.data.table(pool.dt,1:length(pool.dt)))
shift(as.data.table(pool.dt),1:length(pool.dt))
View(shift(as.data.table(pool.dt),1:length(pool.dt)))
?combn
combn(pool.dt,1:length(pool.dt),funcion(x){
sum(x)})
combn(pool.dt,1:length(pool.dt),FUN=function(x){return(sum(x))})
combn(pool.dt,1:pool,FUN=function(x){return(sum(x))})
pool.dt
combn(pool.dt,1:pool,sum)
combn(pool.dt,pool,sum)
combn(pool.dt,c(1:pool),sum)
combn(pool.dt,2,sum)
combn(pool.dt,3,sum)
combn(pool.dt,2,function(x){stop<-1
while(stop<0){
if(sum(x)<28&combn(pool.dt,2,sum)){
}stop<-stop+1
if(stop>length(x)){stop<-0}
}})
combn(pool.dt,2,function(x){stop<-1
while(stop<0){
if(sum(x)<28&combn(pool.dt,2,sum)){
}stop<-stop+1
if(stop>length(x)){stop<-0}
}})
stop<-stop+1
combn(pool.dt,2,function(x){stop<-1
while(stop<0){
if(sum(x)<28&combn(pool.dt,2,sum)){}
stop<-stop+1
if(stop>length(x)){stop<-0}
}})
pool.dt
result[,Sum_Shipped_Msr]
options("scipen"=-100)
result[,Sum_Shipped_Msr]
options(scipen = 999)
result[,Sum_Shipped_Msr]
?loess
loess.mode<-loess(Sum_Shipped_Msr~., data = train)
?
quantreg
library("quantreg", lib.loc="~/R/win-library/3.4")
qreg.model<-rq(Sum_Shipped_Msr~., data = train, tau = 0.9)
install.packages("hqreg")
?hqreg
qreg.model<-hqreg::hqreg(Sum_Shipped_Msr~., data = train, tau = 0.9,method="huber")
qreg.model<-hqreg::hqreg(train[,Sum_Shipped_Msr], data = train[,-Sum_Shipped_Msr], tau = 0.9,method="huber")
qreg.model<-hqreg::hqreg(train[,Sum_Shipped_Msr], train[,-Sum_Shipped_Msr], tau = 0.9,method="huber")
qreg.model<-hqreg::hqreg(train[,Sum_Shipped_Msr], train[,-c("Sum_Shipped_Msr")], tau = 0.9,method="huber")
install.packages("pls")
library(pls)
install.packages("pls")
library("pls", lib.loc="~/R/win-library/3.4")
pcr_model <- pcr(Sum_Shipped_Msr~., data = train, scale = TRUE, validation = "CV")
train[is.na(Sum_Shipped_Msr)]
train[,mean(Sum_Shipped_Msr)]
train[,sd(Sum_Shipped_Msr)]
train
View(train)
train<-train[!is.na(Item_Class)]
pcr_model <- pcr(Sum_Shipped_Msr~., data = train, scale = TRUE, validation = "CV")
