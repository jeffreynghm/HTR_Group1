{
    "collab_server" : "",
    "contents" : " library(data.table)\n# inbound.dt<-fread(\"~/Inbound_Orders_for_Hackathon.csv\")\n# live.dt<-fread(\"~/Live_Orders.csv\")\n# dt<-merge(inbound.dt,live.dt)\ncolnames(inbound.dt)<-c('Load_Port','Eqp_Type','ETD','Dsch_Port','ETA_Dsch_Port','Final_Dest','ETA_Final_Dest','Msr','MSR_Unit','Wgt','Wgt_Unit','PO_No','Item_Class','Shipped_Qty','PkgCode','Shipped_Dtl_Qty','PkgCode','Item_Shipped_Wgt','Item_Wgt_Unit','Item_Shipped_Msr','Item_Msr_Unit')\ndt<-fread(\"~/HTR_Group1/dataset170623v3.csv\")\ncolnames(dt)\ntemp.dt<-dt[,c(1:5,8:10,13,19:20,23:24,27:28,31:32,39:41)][!is.na(prev_ETD_Dte_diff)]\nsummary(temp.dt)\nlibrary(stats)\nlibrary(RSQLite)\nlibrary(odbc)\nlibrary(glmnet)\nlibrary(glmnetUtils)\nlibrary(opencpu)\nlibrary(quantreg)\nlibrary(pls)\nunique(live.dt[,c('ETD','Secondary Descriptions','Supplier Location')])\nfinal.temp.dt<-temp.dt\n\n\nset.seed(124)\n\n\n\n## 75% of the sample size\nsmp_size <- floor(0.75 * nrow(final.temp.dt))\ntrain_ind <- sample(seq_len(nrow(final.temp.dt)), size = smp_size)\n\ntrain <- final.temp.dt[train_ind, ]\ntest <- final.temp.dt[-train_ind, ]\n# \n# smp_size <- floor(0.5 * nrow(temp.test))\n# train_ind <- sample(seq_len(nrow(temp.test)), size = smp_size)\n# \n# validate <- temp.test[train_ind, ]\n# test <- temp.test[-train_ind, ]\n\n\nf =as.formula(paste0(\"Sum_Shipped_Msr~factor(Load_Port) + factor(Item_Class)+factor(Load_Port)*ETD_Yr+ factor(Load_Port)*ETD_Day+ factor(Load_Port)*ETD_Mth+ factor(Load_Port)*ETA_Yr+ factor(Load_Port)*ETD_Day_1+ factor(Load_Port)*ETD_Mth_1+ factor(Load_Port)*HK_Prev_diff_ETD+ factor(Load_Port)*HK_Prev_diff_ETA+ factor(Load_Port)*HK_Next_diff_ETD+ factor(Load_Port)*HK_Next_diff_ETA+ factor(Load_Port)*UK_Prev_diff_ETD+ factor(Load_Port)*UK_Prev_diff_ETA+ factor(Load_Port)*UK_Next_diff_ETD+ factor(Load_Port)*UK_Next_diff_ETA+ factor(Load_Port)*prev_Shipped_Msr+ factor(Load_Port)*prev_ETD_Dte_diff+ factor(Load_Port)*Transport_Days+factor(Item_Class)*ETD_Yr+ factor(Item_Class)*ETD_Day+ factor(Item_Class)*ETD_Mth+ factor(Item_Class)*ETA_Yr+ factor(Item_Class)*ETD_Day_1+ factor(Item_Class)*ETD_Mth_1+ factor(Item_Class)*HK_Prev_diff_ETD+ factor(Item_Class)*HK_Prev_diff_ETA+ factor(Item_Class)*HK_Next_diff_ETD+ factor(Item_Class)*HK_Next_diff_ETA+ factor(Item_Class)*UK_Prev_diff_ETD+ factor(Item_Class)*UK_Prev_diff_ETA+ factor(Item_Class)*UK_Next_diff_ETD+ factor(Item_Class)*UK_Next_diff_ETA+ factor(Item_Class)*prev_Shipped_Msr+ factor(Item_Class)*prev_ETD_Dte_diff+ factor(Item_Class)*Transport_Days+\",paste(colnames(final.temp.dt)[-c(1,2,9)],collapse = \"+\")))\n#terms = attr(terms.formula(f), \"term.labels\")\n\n#f = as.formula(sprintf(\"y ~ %s\", paste(terms, collapse=\"+\")))\n\n\n\n\nfit<-cv.glmnet(f,train,use.model.frame = TRUE,alpha=0)\nopt_lambda <- fit$lambda\nopt_lambda\nfit$lambda.min\n# {\n# y_predicted<-predict(fit,validate,s=fit$lambda.min)\n# # step.model <-MASS::stepAIC( lm(Sum_Shipped_Msr~., data = train), direction = \"backward\", \n# #                       trace = FALSE)\n# # summary(step.model)\n# # y_predicted <- predict(step.model,test)\n# result<-cbind(test,ifelse(y_predicted<0,0,y_predicted))\n# # Sum of Squares Total and Error\n# y<-test[,Sum_Shipped_Msr]\n# sst <- sum((y-mean(y))^2)\n# sse <- sum((ifelse(y_predicted<0,0,y_predicted) - mean(y))^2)\n# \n# # R squared\n# rsq <- 1 - sse / sst\n# rsq\n# }\n# \n\n\n\n\ny_predicted<-ifelse(predict(fit,test,s=fit$lambda.1se)<0,0,predict(fit,test,s=fit$lambda.1se))\ny<-test[,Sum_Shipped_Msr]\nsst <- sum((y-mean(y))^2)\nsse <- sum((ifelse(y_predicted<0,0,y_predicted) - mean(y))^2)\n\n# R squared\nrsq <- 1 - sse / sst\nrsq\ntrain<-train[!is.na(Item_Class)]\nqreg.model<-hqreg::hqreg(train[,Sum_Shipped_Msr], train[,-c(\"Sum_Shipped_Msr\")], tau = 0.9,method=\"huber\")\npcr_model <- pcr(Sum_Shipped_Msr~., data = train, scale = TRUE, validation = \"CV\")\n\nstep.model <-MASS::stepAIC( lm(Sum_Shipped_Msr~., data = train), direction = \"backward\",\n                      trace = FALSE)\nsummary(step.model)\ny_predicted <- predict(step.model,test)\nresult<-cbind(test,ifelse(y_predicted<0,0,y_predicted))\n# Sum of Squares Total and Error\ny<-test[,Sum_Shipped_Msr]\nsst <- sum((y-mean(y))^2)\nsse <- sum((ifelse(y_predicted<0,0,y_predicted) - mean(y))^2)\n\n# R squared\nrsq <- 1 - sse / sst\nrsq\n\n\n\n\n\nlive.dt<-fread(\"~/HTR_Group1/dataset170623v2_live.csv\")\ncolnames(live.dt)<-colnames(dt)\nfinal.live.dt<-unique(live.dt[,c(1:5,8:10,13,19:20,23:24,27:28,31:32,39:41)][!is.na(prev_ETD_Dte_diff)])\ncolnames(final.live.dt)[1]<\"factor(Load_Port)\"\nresult<-cbind(final.live.dt,ifelse(predict(step.model,data=final.live.dt)<0,0,predict(step.model,data=final.live.dt))\n              ,ifelse(predict(fit,final.live.dt,s=fit$lambda.1se)<0,0,predict(fit,final.live.dt,s=fit$lambda.1se)))\n\n# result<-cbind(final.live.dt,predict(fit,final.live.dt,s=fit$lambda.1se))\ncolnames(result)[length(result)-1]<-\"predict_sum_mrs_1\"\ncolnames(result)[length(result)]<-\"predict_sum_mrs_2\"\ncoef(fit\n     )\nresult[,predict_sum_mrs:=predict_sum_mrs_1*0.8+predict_sum_mrs_2*0.2]\nresult[,predict_sum_mrs]\n# class_map<-fread(\"~/class_map.csv\")[,1:2]\n# colnames(class_map)\n# temp.live.dt<-merge(live.dt,class_map)[,c(3,5,11)]\n# setnames(temp.live.dt,\"Supplier Location\",\"Load_Port\")\n# transport.dt<-final.temp.dt[,mean(Transport_Days),by=\"Load_Port\"]\n# colnames(transport.dt)[2]<-\"Transport_Days\"\n# live.dt.make<-merge(temp.live.dt,transport.dt)\n# fwrite(final.temp.dt,\"~/live_make.csv\")\n",
    "created" : 1529727199856.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "864028888",
    "id" : "694C2294",
    "lastKnownWriteTime" : 1529814769,
    "last_content_update" : 1529814769975,
    "path" : "~/HTR_R_Prediction/src/Vol_pred.R",
    "project_path" : "src/Vol_pred.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}